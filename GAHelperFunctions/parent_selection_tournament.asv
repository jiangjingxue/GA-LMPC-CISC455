function [parents_index] = parent_selection_tournament(fitness,population_size,tournament_size,pool_size)

% check torunament size
if ~(tournament_size > 2 && tournament_size < population_size) 
    msg = 'invalid torunament size';
    error(msg);
end


parents_index = [];

for i = 1:pool_size
    % pick k individuals randomly to enter the tournment (select k random
    % numbers from 1 to population size)
    indexs = randperm(population_size,tournament_size);

    % select the individual with the highest fitness value
    [the_max, ~] = max(fitness(indexs));
    selected_index = find(fitness==the_max);

    % deal with duplicate parents
    if i > 1

    % add the winner to the mating pool
    parents_index(i) = selected_index;

end 






end

% Tournament Selection
% The idea is simple. Choose some number of individuals randomly from a population 
% (with or without replacement) select the best individual from this group for further genetic processing
% and repeat as often as desired (usually until the mating pool is filled) 

% Population management models
% 1) Generation model 2) Steady-state model

% Generation model: 
% 1. Begins with a population of size μ 
% 2. Select 'better' parents from the population to insert them into the
% mating pool (Size of the mating pool?) 
% 3. λ offspring are created from the mating pool and evaluated
% 4. Select some individuals from the mating pool, aslo select some
% individuals from the old population 
% 5. The new population should have exactly μ individuals 

% Note: Size of the population, mating pool and offspring
% Option1: the population, mating pool and offspring are all the same size, 
% so that each generation is replaced by all of its offspring
% Option2

% Steady-state model
% -- In the steady-state model, the entire population is not changed at once 
% but rather a part of it
% -- The proportion of the population that is replaced is called the 
% generational gap, and is equal to λ/μ, often with λ = 1
% if population size μ is 10, generation gap = 1/10 = 0.1 